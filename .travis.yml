stages:
  - build-natives
  - build-java

jobs:
  include:
    - stage: build-natives
      env: CMAKE_BUILD_TYPE=Release
      filter_secrets: false
      name: "Windows MSVC Release Natives"
      os: windows
      language: shell
      before_install:
        - shopt -s expand_aliases
      install:
        - choco install awscli
        - alias aws="/c/Program\ Files/Amazon/AWSCLI/bin/aws.exe "
        - aws --version
        - choco install cmake --version 3.13.0
        - cmake -version
        - choco install jdk8
        - choco install visualstudio2017buildtools
        - choco install visualstudio2017-workload-vctools
        - choco install visualstudio2017-workload-nativedesktop
      script:
        - echo "Building Windows MSVC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Visual Studio 15 2017 Win64" ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/${CMAKE_BUILD_TYPE}/driftfx.dll s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/driftfx.dll
        - aws s3 cp DriftFX/${CMAKE_BUILD_TYPE}/driftfx.lib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/driftfx.lib
        - aws s3 cp samples/${CMAKE_BUILD_TYPE}/samples.dll s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/samples.dll
    - stage: build-natives
      env: CMAKE_BUILD_TYPE=Debug
      filter_secrets: false
      name: "Windows MSVC Debug Natives"
      os: windows
      language: shell
      before_install:
        - shopt -s expand_aliases
      install:
        - choco install awscli
        - alias aws="/c/Program\ Files/Amazon/AWSCLI/bin/aws.exe "
        - aws --version
        - choco install cmake --version 3.13.0
        - cmake -version
        - choco install jdk8
        - choco install visualstudio2017buildtools
        - choco install visualstudio2017-workload-vctools
        - choco install visualstudio2017-workload-nativedesktop
      script:
        - echo "Building Windows MSVC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Visual Studio 15 2017 Win64" ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/${CMAKE_BUILD_TYPE}/driftfx.dll s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/driftfx.dll
        - aws s3 cp DriftFX/${CMAKE_BUILD_TYPE}/driftfx.lib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/driftfx.lib
        - aws s3 cp DriftFX/${CMAKE_BUILD_TYPE}/driftfx.pdb s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/driftfx.pdb
        - aws s3 cp samples/${CMAKE_BUILD_TYPE}/samples.dll s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/${CMAKE_BUILD_TYPE}/samples.dll
    - name: "MacOS GCC Release Natives"
      env: CMAKE_BUILD_TYPE=Release
      os: osx
      language: cpp
      addons:
        homebrew:
          packages:
            - awscli
          update: true
      install:
        - brew install binutils
        - brew link binutils
        - PATH="/usr/local/opt/binutils/bin:$PATH"
        - which objcopy
        - which gobjcopy
        - chmod +x tools/install_cmake_macos.sh
        - tools/install_cmake_macos.sh
        - echo $PATH
        - PATH=${TRAVIS_BUILD_DIR}/cmake.portable/CMake.app/Contents/bin:${PATH}
      script: 
        - echo $PATH
        - echo "Building MacOS GCC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=TRUE ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/libdriftfx.dylib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/${CMAKE_BUILD_TYPE}/libdriftfx.dylib
        - aws s3 cp samples/libsamples.dylib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/${CMAKE_BUILD_TYPE}/libsamples.dylib
    - name: "MacOS GCC Debug Natives"
      env: CMAKE_BUILD_TYPE=Debug
      os: osx
      language: cpp
      addons:
        homebrew:
          packages:
            - awscli
          update: true
      install:
        - brew install binutils
        - brew link binutils
        - chmod +x tools/install_cmake_macos.sh
        - tools/install_cmake_macos.sh
        - echo $PATH
        - PATH=${TRAVIS_BUILD_DIR}/cmake.portable/CMake.app/Contents/bin:${PATH}
      script: 
        - echo $PATH
        - echo "Building MacOS GCC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=TRUE ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/libdriftfx.dylib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/${CMAKE_BUILD_TYPE}/libdriftfx.dylib
        - aws s3 cp DriftFX/libdriftfx.dylib.sym s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/${CMAKE_BUILD_TYPE}/libdriftfx.dylib.sym
        - aws s3 cp samples/libsamples.dylib s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/${CMAKE_BUILD_TYPE}/libsamples.dylib
    - name: "Linux GCC Release Natives"
      env: CMAKE_BUILD_TYPE=Release
      os: linux
      language: cpp
      compiler:
        - gcc
      before_install:
        - sudo apt-get install -y freeglut3-dev
        - pip install --user awscli
        - pip install --user cmake==3.13.0
      script:
        - echo "Building Linux GCC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/libdriftfx.so s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/${CMAKE_BUILD_TYPE}/libdriftfx.so
        - aws s3 cp samples/libsamples.so s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/${CMAKE_BUILD_TYPE}/libsamples.so
    - name: "Linux GCC Debug Natives"
      env: CMAKE_BUILD_TYPE=Debug
      os: linux
      language: cpp
      compiler:
        - gcc
      before_install:
        - sudo apt-get install -y freeglut3-dev
        - pip install --user awscli
        - pip install --user cmake==3.13.0
      script:
        - echo "Building Linux GCC ${CMAKE_BUILD_TYPE} Natives"
        - mkdir build
        - cd build
        - cmake -G "Unix Makefiles" ../native || cat CMakeFiles/CMakeOutput.log
        - cmake --build . --config ${CMAKE_BUILD_TYPE}
      after_success:
        - aws s3 cp DriftFX/libdriftfx.so s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/${CMAKE_BUILD_TYPE}/libdriftfx.so
        - aws s3 cp DriftFX/libdriftfx.so.sym s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/${CMAKE_BUILD_TYPE}/libdriftfx.so.sym
        - aws s3 cp samples/libsamples.so s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/${CMAKE_BUILD_TYPE}/libsamples.so
    - stage: build-java
      name: "Java Build"
      os: linux
      dist: trusty
      language: java
      cache:
        directories:
        - $HOME/.m2
      before_install:
        - pip install --user awscli
      install:
        - mkdir -p downloads/{win32,macos,linux}/{Release,Debug}
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/Debug/libdriftfx.so downloads/native/linux/Debug/libdriftfx.so
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/Release/libdriftfx.so downloads/native/linux/Release/libdriftfx.so
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/Debug/libdriftfx.dylib downloads/native/macos/Debug/libdriftfx.dylib
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/Release/libdriftfx.dylib downloads/native/macos/Release/libdriftfx.dylib
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/Debug/driftfx.dll downloads/native/win32/Debug/driftfx.dll
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/Debug/driftfx.lib downloads/native/win32/Debug/driftfx.lib
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/Release/driftfx.dll downloads/native/win32/Release/driftfx.dll
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/Release/driftfx.lib downloads/native/win32/Release/driftfx.lib
        - ls -alR downloads
        - cp downloads/native/linux/Debug/libdriftfx.so org.eclipse.fx.drift.native.linux.debug/native/
        - cp downloads/native/linux/Release/libdriftfx.so org.eclipse.fx.drift.native.linux/native/
        - cp downloads/native/macos/Debug/libdriftfx.dylib org.eclipse.fx.drift.native.macos.debug/native/
        - cp downloads/native/macos/Release/libdriftfx.dylib org.eclipse.fx.drift.native.macos/native/
        - cp downloads/native/win32/Debug/driftfx.dll org.eclipse.fx.drift.native.win32.debug/native/
        - cp downloads/native/win32/Release/driftfx.dll org.eclipse.fx.drift.native.win32/native/
        - mkdir -p org.eclipse.fx.drift.samples/native
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/linux/Debug/libsamples.so org.eclipse.fx.drift.samples/native/libsamples.so
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/macos/Debug/libsamples.dylib org.eclipse.fx.drift.samples/native/libsamples.dylib
        - aws s3 cp s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/natives/windows/Debug/samples.dll org.eclipse.fx.drift.samples/native/samples.dll
        - ls -al org.eclipse.fx.drift.samples/native
      script: 
        - mkdir dist
        - zip -r dist/sources.zip native org.eclipse.fx.drift org.eclipse.fx.drift.feature org.eclipse.fx.drift.samples org.eclipse.fx.drift.samples.feature org.eclipse.fx.drift.updatesite 
        - echo "executing Maven"
        - mvn clean package
        - ls -al org.eclipse.fx.drift.updatesite/target
      after_success:
        - aws s3 cp org.eclipse.fx.drift.updatesite/target/org.eclipse.fx.drift.updatesite-0.1.0-SNAPSHOT.zip s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/updatesite.zip
        - echo "$TRAVIS_COMMIT" > git_commit
        - aws s3 cp git_commit s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/git_commit
        - mkdir dist
        - mkdir dist/include
        - cp -R native/DriftFX/include/* dist/include/
        - mkdir dist/libs
        - cp -R downloads/* dist/libs/
        - cp git_commit dist/git_commit
        - zip -r dist.zip dist/*
        - aws s3 cp dist.zip s3://efxclipse-drift/$TRAVIS_BUILD_NUMBER/dist.zip
        - wget "$WEBHOOK_URL?token=$WEBHOOK_TOKEN&token0=$AWS_ACCESS_KEY_ID&token1=$AWS_SECRET_ACCESS_KEY&travisBuildNumber=$TRAVIS_BUILD_NUMBER&branch_name=$TRAVIS_BRANCH"
